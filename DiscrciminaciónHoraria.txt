--Es necesario tener previamente creado el PZEM que es el actual sistema de medida
--Creamos un nuevo dispositivo P1 Energy, el cual en el ejemplo yo he llamado DHA
--Añadimos el siguiente script DzEvents
--Los comandos PRINT están puestos con fin de Debug, quitarlos si os funciona correctamente
--El ejemplo añade P1 o P2 según hora. En el ejemplo entre 23 y 12h sería valle y el resto punta
--En necesario crear la variable powerAnterior !!

return {
	on = {
		timer = {
			'every 1 minutes' -- just an example to trigger the request
		} 
	},
	execute = function(domoticz, item)
	    --Obtenemos la lectura actual para compararla con la anterior y según que hora sea cargamos en P1 o P2
	    instantNow   = domoticz.devices('PZEM').usage
	    print('Instantaneo W = '..instantNow)
	    counterToday = domoticz.devices('PZEM').counterToday*1000
	    counterPrev  = domoticz.variables('powerAnterior').value
	    print('counterToday = '..counterToday)
	    print('powerAnterior = '..counterPrev)
		domoticz.log('counterToday = '..counterToday, domoticz.LOG_INFO)
		domoticz.variables('powerAnterior').set(counterToday)
		
		--Calculamos el consumo desde la última lectura
		if(tonumber(counterToday)>=tonumber(counterPrev))then
		    consumo = tonumber(counterToday)-tonumber(counterPrev)
	    else
	        consumo = tonumber(counterToday)
	    end
		print('Consumo último minuto = '..consumo)
		
		--Ahora cargamos P1 o P2 según el tramo horario
		p1 = domoticz.devices('DHA').usage1
		p2 = domoticz.devices('DHA').usage2
		--domoticz.devices.updateP1(usage1, usage2, return1, return2, cons, prod)
 
		print('P1 = '..p1)
		print('P2 = '..p2)
		
		local Time = require('Time')
		local now = Time()
		--de 22 a 12 valle
		if(now.hour > 22 or now.hour<12)then
		   print('Valle')
		   p2 = p2 + consumo
		   domoticz.devices('DHA').updateP1(p1, p2, 0, 0, instantNow, 0)
		else
		   print('Punta')
		   p1 = p1 + consumo
		   domoticz.devices('DHA').updateP1(p1, p2, 0, 0, instantNow, 0)		    
		end
		--de 12 a 22 punta
	end
}
